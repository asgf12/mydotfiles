[[ -x $(command -v sudo) || $USER = "root" ]] ||  alias sudo=""
[[ -x $(command -v nixos-generate-config) ]] && alias conf="sudo nvim /etc/nixos/configuration.nix" && alias cleanup="sudo nix-collect-garbage -d --delete-older-than 20d"
[[ -x $(command -v apk) ]] && alias sudo="doas" && alias ain="doas apk add" && alias reboot="doas reboot" && alias poweroff="doas poweroff"
[[ -x $(command -v fdfind) ]] && alias fd="fdfind"
alias hyp="nvim ~/.config/hypr/hyprland.conf"
alias brc=". ~/.bashrc"
alias ls="ls --color=auto"
alias ll="ls -lAF --color=auto"
alias la="ls -la --color=auto"
alias cp="cp -i"
alias rm="rm -i"
alias mv="mv -i"
alias frogssh="ssh frog@frog02.mikr.us -p 10613"
alias ta="tmux attach"
alias grep='grep --color=auto'
alias vnv='nvim $(fzf -m --preview="bat --color=always {}")'
alias vv='vim $(fzf -m --preview="bat --color=always {}")'
alias ga='git add *'
alias gc='git commit -m'
alias gp='git pull'
alias gr='git restore'
alias gpm='git push --repo=git@github.com:asgf12/mydotfiles.git'
alias dot='cd ~/mydotfiles'


upgrade() {
  LOGFILE="$HOME/.local/log/update_$(date +%B%Y).log"
  {
    sudo printf "\nStartTime:\n$(date +%F_%T)\n\n" ;
    [ -x "$(command -v flatpak)" ] && echo "== Flatpak ==" && sudo flatpak update -y
    [ -x "$(command -v snap)" ] && echo "== Snap ==" && sudo snap refresh
    if [ -x "$(command -v apt)" ]; then
      echo "== APT ==" && sudo apt update && sudo apt upgrade -y
    elif [ -x "$(command -v dnf)" ]; then
      echo "== DNF ==" && sudo dnf upgrade -y
    elif [ -x "$(command -v pacman)" ]; then
      echo "== Pacman ==" && sudo pacman -Syu
    elif [ -x "$(command -v zypper)" ]; then
      echo "== Zypper ==" && sudo zypper dup
    elif [ -x "$(command -v ujust)" ]; then
      echo "== Ujust ==" && ujust update
    elif [[ -x "$(command -v rpm-ostree)" && ! -x "$(command -v ujust)" ]]; then
      echo "== rpm-ostree ==" && rpm-ostree upgrade
    elif [ -x "$(command -v apk)" ]; then
      echo "== APK ==" && doas apk update && doas apk upgrade
    elif [ -x "$(command -v nixos-rebuild)" ]; then
      echo "== NIX ==" && sudo nixos-rebuild switch --upgrade
    else
      echo "Nie wykryto znanego menedżera pakietów."
    fi
    printf "Finished $(date +%T)\n" ;
  } 2>&1 | tee -a "$LOGFILE"
}
